/******************************************************************************
 * Vige, Home of Professional Open Source Copyright 2010, Vige, and           *
 * individual contributors by the @authors tag. See the copyright.txt in the  *
 * distribution for a full listing of individual contributors.                *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may    *
 * not use this file except in compliance with the License. You may obtain    *
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0        *
 * Unless required by applicable law or agreed to in writing, software        *
 * distributed under the License is distributed on an "AS IS" BASIS,          *
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 * See the License for the specific language governing permissions and        *
 * limitations under the License.                                             *
 ******************************************************************************/
package it.vige.greenarea.itseasy.ln.swing;

import java.awt.Dialog;

import com.mxgraph.model.mxCell;
import com.mxgraph.swing.mxGraphComponent;

import it.vige.greenarea.I18N.I18N;
import it.vige.greenarea.itseasy.ln.swing.LNeditorEventHandlerInterface.LNeditorEvent;
import it.vige.greenarea.itseasy.ln.swing.LNeditorEventHandlerInterface.LNeventType;
import it.vige.greenarea.ln.model.LNSite;
import it.vige.greenarea.ln.model.LNSitesSet;

public class SitesSetPanel extends javax.swing.JPanel implements LNeditorComponentInterface {
	/**
	 * 
	 */
	private static final long serialVersionUID = 4167357982079696310L;
	private static final int[] noSelection = new int[0];
	private mxGraphComponent graph;
	private Dialog parent;
	private boolean changed;
	private LNSitesSet lnss;
	private LNSiteEditor lnsEditor;
	private boolean newInstance = false;
	private LNSite lns;

	@Override
	public void addListener(LNeditorEventHandlerInterface h) {
	}

	/** Creates new form SitesSetPanel */
	protected SitesSetPanel() {
		initComponents();
	}

	SitesSetPanel(mxGraphComponent gc, Dialog parent) {
		this();
		changed = false;
		this.graph = gc;
		this.parent = parent;
		lnsEditor = new LNSiteEditor(graph);
		lnsEditor.addListener(new LNeditorEventHandlerInterface() {
			@Override
			public void handleEvent(LNeditorEvent evt) {
				saveOrCancelEvent(evt);
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		sitesListField = new javax.swing.JList();
		operationButton = new javax.swing.JButton();

		sitesListField.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		sitesListField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				sitesListFieldMouseClicked(evt);
			}
		});
		sitesListField.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
				sitesListFieldValueChanged(evt);
			}
		});
		sitesListField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				sitesListFieldKeyTyped(evt);
			}
		});
		jScrollPane1.setViewportView(sitesListField);

		operationButton.setText("jButton1");
		operationButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				operationButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(operationButton, javax.swing.GroupLayout.Alignment.LEADING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING,
								javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addContainerGap(126, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(25, 25, 25)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211,
								javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(operationButton)
				.addContainerGap(32, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void sitesListFieldValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_sitesListFieldValueChanged
		Object o = sitesListField.getSelectedValue();
		if (o != null)
			operationButton.setText(I18N.getString("DeleteCommand"));
		else
			operationButton.setText(I18N.getString("NewCommand"));
	}// GEN-LAST:event_sitesListFieldValueChanged

	private void operationButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_operationButtonActionPerformed
		if (sitesListField.isSelectionEmpty()) {
			lns = new LNSite();
			parent.setEnabled(false);
			editLNSite(lns, evt);
			newInstance = true;
		} else {
			Object[] list = sitesListField.getSelectedValues();
			for (Object o : list)
				if (o instanceof LNSite)
					lnss.removeSite((LNSite) o);
			sitesListField.setListData(lnss.getSites());
			changed = true;
		}
	}// GEN-LAST:event_operationButtonActionPerformed

	private void sitesListFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_sitesListFieldKeyTyped
		if (evt.getKeyChar() == 27) {
			sitesListField.setSelectedIndices(noSelection);
		}
	}// GEN-LAST:event_sitesListFieldKeyTyped

	private void sitesListFieldMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_sitesListFieldMouseClicked
		if (evt.getClickCount() == 2) {
			Object o = sitesListField.getSelectedValue();
			if (o instanceof LNSite) {
				parent.setEnabled(false);
				editLNSite((LNSite) o, evt);
				newInstance = false;
			}
		}
	}// GEN-LAST:event_sitesListFieldMouseClicked

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton operationButton;
	private javax.swing.JList sitesListField;

	// End of variables declaration//GEN-END:variables

	void startEditing(Object cell) {
		changed = false;
		if (cell instanceof mxCell) {
			Object o = ((mxCell) cell).getValue();
			if (o != null && o instanceof LNSitesSet) {
				lnss = (LNSitesSet) o;
				sitesListField.setListData(lnss.getSites());
				sitesListField.setSelectedIndices(noSelection);
				operationButton.setText(I18N.getString("NewCommand"));
			}
		}
	}

	void stopEditing(boolean cancel) {

	}

	private void editLNSite(LNSite lns, java.awt.AWTEvent evt) {
		mxCell o = (new mxCell());
		o.setValue(lns);
		lnsEditor.startEditing(o, evt);
	}

	private void saveOrCancelEvent(LNeditorEvent evt) {
		if (evt.getType() == LNeventType.save)
			if (newInstance) {
				LNSite o = (LNSite) evt.getUserObject();
				lnss.addSite(o);
				sitesListField.setListData(lnss.getSites());
				changed = true;
			}
		lnsEditor.stopEditing(false);
		parent.setEnabled(true);
	}

	@Override
	public boolean isChanged() {
		return changed;
	}

	@Override
	public Object getUserObject() {
		return lnss;
	}

}
