/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TestTabPanel.java
 *
 * Created on 22-ago-2011, 10.33.59
 */
package it.vige.greenarea.itseasy.routing.swing;

import static org.slf4j.LoggerFactory.getLogger;
import it.vige.greenarea.itseasy.swing.editor.LogisticsNetEditor;
import it.vige.greenarea.I18N.I18N;
import it.vige.greenarea.dto.GeoLocation;
import it.vige.greenarea.dto.GeoLocationInterface;
import it.vige.greenarea.geo.GisService;
import it.vige.greenarea.geo.GisService.GeoCodingException;
import it.vige.greenarea.ln.model.LNSite;
import it.vige.greenarea.utilities.LNutilities;

import java.awt.Color;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;

import javax.swing.JButton;

import org.slf4j.Logger;

import com.mxgraph.swing.mxGraphComponent;

/**
 * 
 * @author 00917308
 */
public class LocationInputPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = -6260142203919318044L;

	private Logger logger = getLogger(getClass());

	private GeoLocationInterface site;
	// private static final GeoLocationInterface nullSite = new
	// GeoLocation(0.,0.);
	private HashMap<String, LNSite> nodesMap;
	private GisService gis = null;

	public GeoLocationInterface getSite() {
		return site;
	}

	public void setSite(GeoLocationInterface site) {
		this.site = site;
	}

	/** Creates new form TestTabPanel */
	public LocationInputPanel(mxGraphComponent graphComponent, Dialog parent) {
		initComponents();
	}

	private static final String explicitAddress = "<"
			+ I18N.getString("ExplicitAddress") + ">";
	private static final String gpsPoint = "<" + I18N.getString("GPSpoint")
			+ ">";

	protected void refreshComponents() {
		nodesMap = LNutilities.getLNSitesMap();
		ArrayList<String> keys = (new ArrayList<String>());
		keys.addAll(nodesMap.keySet());
		Collections.sort(keys);
		keys.add(0, explicitAddress);
		keys.add(1, gpsPoint);
		nodeListCombo.setModel(new javax.swing.DefaultComboBoxModel(keys
				.toArray()));
		displayAddressData(site);
		displayGpsData(site);
		addressFieldsSetFocusable(true);
		gpsFieldsSetFocusable(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		nodeListCombo = new javax.swing.JComboBox();
		jLabel12 = new javax.swing.JLabel();
		jLabel14 = new javax.swing.JLabel();
		streetField = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jLabel11 = new javax.swing.JLabel();
		longitudeField = new javax.swing.JTextField();
		cityField = new javax.swing.JTextField();
		latitudeField = new javax.swing.JTextField();
		regionField = new javax.swing.JTextField();
		numberField = new javax.swing.JTextField();
		countryLabel1 = new javax.swing.JLabel();
		jLabel13 = new javax.swing.JLabel();
		countryField = new javax.swing.JTextField();
		regionLabel1 = new javax.swing.JLabel();
		doGeocodeButton = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		zipField = new javax.swing.JTextField();
		provinceField = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		errorMessage = new javax.swing.JLabel();

		nodeListCombo.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		nodeListCombo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nodeListComboActionPerformed(evt);
			}
		});

		jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel12.setText(I18N.getString("Number"));

		jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel14.setText(I18N.getString("Longitude"));

		streetField.setText("jTextField1");
		streetField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				streetFieldKeyTyped(evt);
			}
		});

		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel3.setText(I18N.getString("City"));
		jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

		jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel11.setText(I18N.getString("Street"));

		longitudeField.setText("jTextField1");
		longitudeField
				.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		longitudeField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				longitudeFieldKeyTyped(evt);
			}
		});

		cityField.setText("jTextField1");
		cityField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				cityFieldKeyTyped(evt);
			}
		});

		latitudeField.setText("jTextField1");
		latitudeField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		latitudeField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				latitudeFieldKeyTyped(evt);
			}
		});

		regionField.setText("jTextField1");
		regionField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				regionFieldKeyTyped(evt);
			}
		});

		numberField.setText("jTextField1");
		numberField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				numberFieldKeyTyped(evt);
			}
		});

		countryLabel1
				.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		countryLabel1.setText(I18N.getString("Country"));
		countryLabel1
				.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

		jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel13.setText(I18N.getString("Latitude"));

		countryField.setText("jTextField2");
		countryField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				countryFieldKeyTyped(evt);
			}
		});

		regionLabel1
				.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		regionLabel1.setText(I18N.getString("Region"));
		regionLabel1
				.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

		doGeocodeButton.setText(I18N.getString("GeoCodeAction"));
		doGeocodeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doGeocodeButtonActionPerformed(evt);
			}
		});

		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel1.setText(I18N.getString("ZIP"));

		zipField.setText("jTextField1");

		provinceField.setText("jTextField1");

		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
		jLabel2.setText(I18N.getString("Province"));

		errorMessage.setForeground(new java.awt.Color(255, 0, 51));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														errorMessage,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addComponent(
																						longitudeField)
																				.addComponent(
																						latitudeField,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						95,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel14)
																				.addComponent(
																						jLabel13)))
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.LEADING,
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel11)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										streetField))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING)
																												.addComponent(
																														jLabel3)
																												.addGroup(
																														layout.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																																.addGroup(
																																		layout.createParallelGroup(
																																				javax.swing.GroupLayout.Alignment.TRAILING)
																																				.addComponent(
																																						countryLabel1)
																																				.addComponent(
																																						regionLabel1))
																																.addComponent(
																																		jLabel2,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		77,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)))
																								.addGap(18,
																										18,
																										18)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(
																														regionField)
																												.addComponent(
																														countryField)
																												.addComponent(
																														provinceField)
																												.addComponent(
																														cityField))))
																.addGap(169,
																		169,
																		169))
												.addGroup(
														javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						jLabel12)
																				.addComponent(
																						jLabel1))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						numberField,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						42,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						zipField))
																.addGap(270,
																		270,
																		270))
												.addGroup(
														javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						nodeListCombo,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						227,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						doGeocodeButton,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						152,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(252,
																		252,
																		252)))
								.addGap(55, 55, 55)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(nodeListCombo,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										24,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(31, 31, 31)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														countryField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(countryLabel1))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														regionField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(regionLabel1))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														provinceField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel2))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														cityField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel3))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel11)
												.addComponent(
														streetField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														numberField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel12))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														zipField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel1))
								.addGap(29, 29, 29)
								.addComponent(doGeocodeButton)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										15, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														latitudeField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel13))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														longitudeField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jLabel14,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														16,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(29, 29, 29)
								.addComponent(errorMessage,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										26,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(31, 31, 31)));
	}// </editor-fold>//GEN-END:initComponents

	private void countryFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_countryFieldKeyTyped
		addressChangedEvent();
	}// GEN-LAST:event_countryFieldKeyTyped

	private void regionFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_regionFieldKeyTyped
		addressChangedEvent();
	}// GEN-LAST:event_regionFieldKeyTyped

	private void cityFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_cityFieldKeyTyped
		addressChangedEvent();
	}// GEN-LAST:event_cityFieldKeyTyped

	private void streetFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_streetFieldKeyTyped
		addressChangedEvent();
	}// GEN-LAST:event_streetFieldKeyTyped

	private void numberFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_numberFieldKeyTyped
		addressChangedEvent();
	}// GEN-LAST:event_numberFieldKeyTyped

	private void addressChangedEvent() {
		errorMessage.setText("");
		enableButton(doGeocodeButton);
		latitudeField.setText("0.0");
		longitudeField.setText("0.0");
	}

	private void doGeocodeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_doGeocodeButtonActionPerformed
		GeoLocationInterface gli = null;
		Object item = nodeListCombo.getSelectedItem();

		disableButton(doGeocodeButton);
		if (gis == null)
			gis = LogisticsNetEditor.getGisService();
		if (item.equals(explicitAddress)) {
			GeoLocation gl = new GeoLocation(0., 0.);
			saveLocationData(gl);
			try {
				gli = gis.geoCode(gl);
			} catch (GeoCodingException ex) {
				logger.error("logistic editor", ex);
				errorMessage.setText(I18N.getString("GeoLocationError"));
			}
		} else if (item.equals(gpsPoint)) {
			GeoLocation gl = new GeoLocation(0., 0.);
			saveLocationData(gl);
			try {
				gli = gis.reverseGeoCode(gl);
			} catch (GeoCodingException ex) {
				logger.error("logistic editor", ex);
				errorMessage.setText(I18N.getString("GeoLocationError"));
			}
		}
		if (gli != null) {
			site = gli;
			errorMessage.setText("");
		}
		displayAddressData(site);
		displayGpsData(site);
	}// GEN-LAST:event_doGeocodeButtonActionPerformed

	private void nodeListComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nodeListComboActionPerformed
		errorMessage.setText("");
		Object item = nodeListCombo.getSelectedItem();
		if (item.equals(explicitAddress)) {
			addressFieldsSetFocusable(true);
			gpsFieldsSetFocusable(false);
		} else if (item.equals(gpsPoint)) {
			addressFieldsSetFocusable(false);
			clearAddressData(site);
			gpsFieldsSetFocusable(true);
		} else {
			copyLocationData(nodesMap.get((String) item), site);
			displayAddressData(site);
			displayGpsData(site);
			addressFieldsSetFocusable(false);
			gpsFieldsSetFocusable(false);
		}
	}// GEN-LAST:event_nodeListComboActionPerformed

	private void latitudeFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_latitudeFieldKeyTyped
		gpsChangedEvent();
	}// GEN-LAST:event_latitudeFieldKeyTyped

	private void longitudeFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_longitudeFieldKeyTyped
		gpsChangedEvent();
	}// GEN-LAST:event_longitudeFieldKeyTyped

	private void gpsChangedEvent() {
		errorMessage.setText("");
		enableButton(doGeocodeButton);
		clearAddressData(site);
		displayAddressData(site);
	}

	private void disableButton(JButton b) {
		b.setEnabled(false);
		b.setForeground(Color.gray);
	}

	private void enableButton(JButton b) {
		b.setEnabled(true);
		b.setForeground(Color.black);
	}

	private void displayAddressData(GeoLocationInterface site) {
		if (site == null)
			site = new GeoLocation(0., 0.);
		countryField.setText(site.getCountry());
		regionField.setText(site.getAdminAreaLevel1());
		provinceField.setText(site.getAdminAreaLevel2());
		cityField.setText(site.getCity());
		streetField.setText(site.getStreet());
		numberField.setText(site.getNumber());
		zipField.setText(site.getZipCode());
	}

	private void displayGpsData(GeoLocationInterface site) {
		latitudeField.setText(Double.toString(site.getLatitude()));
		longitudeField.setText(Double.toString(site.getLongitude()));
	}

	private void saveLocationData(GeoLocationInterface site) {
		site.setCountry(countryField.getText());
		site.setAdminAreaLevel1(regionField.getText());
		site.setAdminAreaLevel2(provinceField.getText());
		site.setCity(cityField.getText());
		site.setStreet(streetField.getText());
		site.setNumber(numberField.getText());
		site.setZipCode(zipField.getText());
		site.setLatitude(Double.parseDouble(latitudeField.getText()));
		site.setLongitude(Double.parseDouble(longitudeField.getText()));
	}

	private void clearAddressData(GeoLocationInterface site) {
		site.setCountry("");
		site.setAdminAreaLevel1("");
		site.setAdminAreaLevel2("");
		site.setCity("");
		site.setStreet("");
		site.setNumber("");
		site.setZipCode("");
	}

	private void copyLocationData(GeoLocationInterface from,
			GeoLocationInterface site) {
		site.setCountry(from.getCountry());
		site.setAdminAreaLevel1(from.getAdminAreaLevel1());
		site.setAdminAreaLevel2(from.getAdminAreaLevel2());
		site.setCity(from.getCity());
		site.setStreet(from.getStreet());
		site.setNumber(from.getNumber());
		site.setZipCode(from.getZipCode());
		site.setLatitude(from.getLatitude());
		site.setLongitude(from.getLongitude());
	}

	private void addressFieldsSetFocusable(boolean addressMode) {

		cityField.setEnabled(addressMode);
		countryField.setEnabled(addressMode);
		numberField.setEnabled(addressMode);
		regionField.setEnabled(addressMode);
		provinceField.setEnabled(addressMode);
		streetField.setEnabled(addressMode);
		zipField.setEnabled(addressMode);
	}

	private void gpsFieldsSetFocusable(boolean mode) {
		doGeocodeButton.setEnabled(mode);
		latitudeField.setEnabled(mode);
		longitudeField.setEnabled(mode);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField cityField;
	private javax.swing.JTextField countryField;
	private javax.swing.JLabel countryLabel1;
	private javax.swing.JButton doGeocodeButton;
	private javax.swing.JLabel errorMessage;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JTextField latitudeField;
	private javax.swing.JTextField longitudeField;
	private javax.swing.JComboBox nodeListCombo;
	private javax.swing.JTextField numberField;
	private javax.swing.JTextField provinceField;
	private javax.swing.JTextField regionField;
	private javax.swing.JLabel regionLabel1;
	private javax.swing.JTextField streetField;
	private javax.swing.JTextField zipField;
	// End of variables declaration//GEN-END:variables

}
