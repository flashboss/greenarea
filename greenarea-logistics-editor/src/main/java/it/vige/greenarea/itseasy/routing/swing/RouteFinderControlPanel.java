/******************************************************************************
 * Vige, Home of Professional Open Source Copyright 2010, Vige, and           *
 * individual contributors by the @authors tag. See the copyright.txt in the  *
 * distribution for a full listing of individual contributors.                *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may    *
 * not use this file except in compliance with the License. You may obtain    *
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0        *
 * Unless required by applicable law or agreed to in writing, software        *
 * distributed under the License is distributed on an "AS IS" BASIS,          *
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 * See the License for the specific language governing permissions and        *
 * limitations under the License.                                             *
 ******************************************************************************/
package it.vige.greenarea.itseasy.routing.swing;

import java.util.List;

import com.mxgraph.swing.mxGraphComponent;

import it.vige.greenarea.I18N.I18N;
import it.vige.greenarea.dto.GeoLocationInterface;
import it.vige.greenarea.sgrl.webservices.GeoLocation;
import it.vige.greenarea.sgrl.webservices.LogisticNetworkRouting;

public class RouteFinderControlPanel extends javax.swing.JPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 7919854987598734520L;
	private static final String NO_PATHS_FOUND = "noPathFound";
	private RouteFinderDialog parent;

	/** Creates new form RouteFinderControlPanel */
	public RouteFinderControlPanel(mxGraphComponent graphComponent, RouteFinderDialog parent) {
		initComponents();
		this.parent = parent;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		doFindRouteButton = new javax.swing.JButton();
		routeTextPanel = new javax.swing.JScrollPane();
		routeTextArea = new javax.swing.JTextArea();

		addComponentListener(new java.awt.event.ComponentAdapter() {
			public void componentShown(java.awt.event.ComponentEvent evt) {
				formComponentShown(evt);
			}
		});

		doFindRouteButton.setText(I18N.getString("RouteFinder"));
		doFindRouteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doFindRouteButtonActionPerformed(evt);
			}
		});

		routeTextArea.setColumns(20);
		routeTextArea.setRows(5);
		routeTextPanel.setViewportView(routeTextArea);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout.createSequentialGroup().addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(routeTextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 376,
														Short.MAX_VALUE)
												.addComponent(doFindRouteButton))
										.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(doFindRouteButton)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(routeTextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
						.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void doFindRouteButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_doFindRouteButtonActionPerformed
		// ArrayList<LNPath> paths =
		// lng.getLogisticPaths(graphComponent.getGraph(), parent.getGeoFrom(),
		// parent.getGeoTo());
		GeoLocation from = new GeoLocation();
		GeoLocation to = new GeoLocation();
		copyGeoLocation(parent.getGeoFrom(), from);
		copyGeoLocation(parent.getGeoTo(), to);
		List<String> paths;
		StringBuilder sb = new StringBuilder();
		try {
			paths = getRoutes(from, to, "");
			if (paths.isEmpty())
				sb.append(I18N.getString(NO_PATHS_FOUND));
			else
				for (int i = 0; i < paths.size(); i++) {
					sb.append("route ").append(Integer.toString(i)).append(": ").append(paths.get(i).toString())
							.append("\n");
				}
		} catch (Exception ex) {
			sb.append(ex.toString());
		}

		routeTextArea.setText(sb.toString());
	}// GEN-LAST:event_doFindRouteButtonActionPerformed

	private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
		routeTextArea.setText("");
	}// GEN-LAST:event_formComponentShown

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton doFindRouteButton;
	private javax.swing.JTextArea routeTextArea;
	private javax.swing.JScrollPane routeTextPanel;

	// End of variables declaration//GEN-END:variables

	private static java.util.List<java.lang.String> getRoutes(GeoLocation source, GeoLocation destination,
			java.lang.String options) throws Exception {
		it.vige.greenarea.itseasy.sgrl.wswrapper.LogisticNetworkRoutingService service = new it.vige.greenarea.itseasy.sgrl.wswrapper.LogisticNetworkRoutingService();
		LogisticNetworkRouting port = service.getLogisticNetworkRoutingPort();
		return port.getRoutes(source, destination, options);
	}

	private void copyGeoLocation(GeoLocationInterface gli, GeoLocation to) {
		if (to != null) {
			to.setCountry(gli.getCountry());
			to.setAdminAreaLevel1(gli.getAdminAreaLevel1());
			to.setAdminAreaLevel2(gli.getAdminAreaLevel2());
			to.setCity(gli.getCity());
			to.setStreet(gli.getStreet());
			to.setNumber(gli.getNumber());
			to.setZipCode(gli.getZipCode());
			to.setLatitude(gli.getLatitude());
			to.setLongitude(gli.getLongitude());
			to.setRadius(gli.getRadius());
		}
	}
}
